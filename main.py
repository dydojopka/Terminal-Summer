import os
import json
import simpleaudio as sa
import threading

from textual.app import App, ComposeResult
from textual.containers import HorizontalGroup, VerticalScroll, Vertical
from textual.reactive import reactive
from textual.widgets import Button, Label, Footer, Header, Static
from textual.widget import Widget


class AudioPlayer:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞—É–¥–∏–æ"""
    def __init__(self):
        self.current_playback = None
        
    def play_sound(self, file_path, loop=False):
        """–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–≤—É–∫–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
        def play():
            try:
                wave_obj = sa.WaveObject.from_wave_file(file_path)
                play_obj = wave_obj.play()
                
                if loop:
                    play_obj.wait_done()
                    self.play_sound(file_path, loop=True)
                    
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞: {e}")
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
        if self.current_playback:
            self.current_playback.stop()
            
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        self.current_playback = threading.Thread(target=play, daemon=True)
        self.current_playback.start()
    
    def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è"""
        if self.current_playback:
            sa.stop_all()



class MainMenu(Static):
    """–í–∏–¥–∂–µ—Ç –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    BORDER_TITLE="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    def compose(self):
        yield MainMenuMiddleBtns()
        yield MainMenuBottomBtns()
    
class MainMenuMiddleBtns(HorizontalGroup):
    """–í–∏–¥–∂–µ—Ç-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ü–µ–Ω—Ç–∞—Ä–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫"""
    BORDER_TITLE="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
    def compose(self):
            yield MainMenuStartBtn(id="container-start-game")
            yield MainMenuLoadBtn(id="container-save-load")
            yield MainMenuGalleryBtn(id="container-gallery")

class MainMenuBottomBtns(HorizontalGroup):
    """–í–∏–¥–∂–µ—Ç-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –Ω–∏–∂–Ω–∏—Ö –∫–Ω–æ–ø–æ–∫"""
    def compose(self):
        yield Button("–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è üèÖ", id="btn-achievements")
        yield Button("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ü™õ", id="btn-settings-menu")
        yield Button("–í—ã—Ö–æ–¥ üö™", id="btn-exit-menu")

class MainMenuStartBtn(Vertical):
    """–í–∏–¥–∂–µ—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É" —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º"""
    def compose(self):
        yield Button("–ù–∞—á–∞—Ç—å –∏–≥—Ä—É ‚ñ∂", id="btn-start-game")
        yield Label('   –î–æ—Ä–æ–≥–æ–π –ø–∏–æ–Ω–µ—Ä!\n   –¢—ã ‚Äî –Ω–∞ –ø–æ—Ä–æ–≥–µ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∏–π.\n   –ü–µ—Ä–µ–¥ —Ç–æ–±–æ–π —Ä–∞—Å–ø–∞—Ö–Ω—É–ª–∏—Å—å –¥–≤–µ—Ä–∏ —Å–∞–º–æ–≥–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –≤ –º–∏—Ä–µ ‚Äî –Ω–∞—à–µ–≥–æ –ª—é–±–∏–º–æ–≥–æ –ª–∞–≥–µ—Ä—è "–°–æ–≤—ë–Ω–æ–∫". –≠—Ç–∞ —Å–º–µ–Ω–∞ –∑–∞–ø–æ–º–Ω–∏—Ç—å—Å—è —Ç–µ–±–µ –Ω–∞ –≤—Å—é –∂–∏–∑–Ω—å.\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!')

class MainMenuLoadBtn(Vertical):
    """–í–∏–¥–∂–µ—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–°–æ—Ö–∞–Ω–µ–Ω–∏–µ" —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º"""
    def compose(self):
        yield Button("–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ üìí", id="btn-save-load")
        yield Label('   –ë–µ—Ä–µ–∂–Ω–æ –æ—Ç–Ω–æ—Å–∏—Å—å –∫ –∏—Å—Ç–æ—Ä–∏–∏ —Å–≤–æ–µ–≥–æ –ª–∞–≥–µ—Ä—è. –¢—â–∞—Ç–µ–ª—å–Ω–æ –∑–∞–ø–∏—Å—ã–≤–∞–π —Å–≤–æ–∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∏ –º—ã—Å–ª–∏ –æ –ø—Ä–æ—à–µ–¥—à–∏—Ö –¥–Ω—è—Ö.\n–ü—Ä–∏ –ø–æ–º–æ—â–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π —Ç—ã –≤—Å–µ–≥–¥–∞ —Å–º–æ–∂–µ—à—å –≤–µ—Ä–Ω—É—Ç—Å—è –Ω–∞–∑–∞–¥ –∫ –ø—Ä–æ–π–¥–µ–Ω–Ω–æ–º—É —ç–ø–∏–∑–æ–¥—É –∏ –æ—Å–º—ã—Å–ª–∏—Ç—å –µ–≥–æ –∑–∞–Ω–æ–≤–æ. –£–¥–∞—á–∏ —Ç–µ–±–µ –≤ —Ç–≤–æ–∏—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏—è—Ö!\n   –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–π–¥—ë—Ç –Ω–µ —Ç–∞–∫, —Ç—ã –∑–Ω–∞–µ—à—å, —á—Ç–æ –¥–µ–ª–∞—Ç—å')

class MainMenuGalleryBtn(Vertical):
    """–í–∏–¥–∂–µ—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ì–∞–ª–µ—Ä–µ—è" —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º"""
    def compose(self):
        yield Button("–ì–∞–ª–µ—Ä–µ—è üì∑", id="btn-gallery")
        yield Label('   –ó–¥–µ—Å—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã —Ä–∞–±–æ—Ç—ã —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞—à–µ–≥–æ —Ñ–æ—Ç–æ–∫—Ä—É–∂–∫–∞. –¢–≤–æ–∏ —Ç–æ–≤–∞—Ä–∏—â–∏ –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –∑–∞–ø–µ—á–∞—Ç–ª–µ—Ç—å –≤–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –∏–∑ –∂–∏–Ω–∏ –ª–∞–≥–µ—Ä—è, –∞ –Ω–∞ –º–Ω–æ–≥–∏—Ö —Å–Ω–∏–º–∫–∞—Ö —Ç—ã —Å–º–æ–∂–µ—à—å –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å –∏ —Å–µ–±—è. –ë—É–¥—å –æ–ø—Ä—è—Ç–µ–Ω –∏ —Å–≤–æ–∏–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º –ø–æ–¥–∞–≤–∞–π –ø—Ä–∏–º–µ—Ä –æ–∫—Ä—É–∂–∞—é—â–∏–º.')


class GalleryMenu(HorizontalGroup):
    """–í–∏–¥–∂–µ—Ç –≥–∞–ª–µ—Ä–µ–∏"""
    BORDER_TITLE = "–ì–∞–ª–µ—Ä–µ—è"
    def compose(self):
        yield GalleryMenuLeftBtns()
        yield GalleryMenuMidBtns()
        

class GalleryMenuLeftBtns(Vertical):
    """–í–∏–¥–∂–µ—Ç-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≥–∞–ª–µ—Ä–µ–∏ —Å–≤–µ—Ä—Ö—É"""
    def compose(self):
        yield Button("–ù–∞–∑–∞–¥ ‚Ü©", id="btn-close-gallery")
        with Static(id="container-left-btns"):
            yield Button("–ú—É–∑—ã–∫–∞", variant="default", id="btn-gallery-music")
            yield Button("–ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏", variant="primary", id="btn-gallery-cg")
            yield Button("–§–æ–Ω—ã", variant="default", id="btn-gallery-bg")

class GalleryMenuMidBtns(Vertical):
    """–í–∏–¥–∂–µ—Ç-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∏ –∞—Ä—Ç-–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –≥–∞–ª–µ—Ä–µ–∏ –≤ —Ü–µ–Ω—Ç—Ä–µ"""
    BORDER_TITLE="–ù–∞–∑–≤–∞–Ω–∏–µ bg/cg"
    def compose(self):
        with HorizontalGroup():
            yield Button("<\n<\n<\n<", id="btn-back-gallery")
            yield Static("", id="bg-cg-gallery")
            yield Button(">\n>\n>\n>", id="btn-next-gallery")
        yield GalleryMenuBottomBtns()
        

class GalleryMenuBottomBtns(HorizontalGroup):
    """–í–∏–¥–∂–µ—Ç-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∫–∞—á–µ—Å—Ç–≤–∞"""
    def compose(self):
        yield Button("–º–∞–ª–µ–Ω—å–∫–∏–π", variant="default", id="btn-small-gallery")
        yield Button("–°—Ä–µ–¥–Ω–∏–π", variant="warning", id="btn-medium-gallery")
        yield Button("–û–ì–†–û–ú–ù–´–ô", variant="default", id="btn-large-gallery")


class PauseMenu(Static):
    """–í–∏–¥–∂–µ—Ç –º–µ–Ω—é –ø–∞—É–∑—ã"""
    def compose(self):
        yield PauseMenuContainer()

class PauseMenuContainer(VerticalScroll):
    """–î–æ–ø –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –º–µ–Ω—é –ø–∞—É–∑—ã(–î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è title)"""
    BORDER_TITLE = "–ü–∞—É–∑–∞"
    def compose(self):
        yield Button("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", id="btn-continue")
        yield Button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å", id="btn-save")
        yield Button("–ó–∞–≥—Ä—É–∑–∏—Ç—å", id="btn-load")
        yield Button("–ù–∞—Å—Ç—Ä–æ–π–∫–∏", id="btn-settings-pause")
        yield Button("–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", id="btn-menu")
        yield Button("–í—ã—Ö–æ–¥", id="btn-exit-pause")


class SettingsMenu(VerticalScroll):
    """–í–∏–¥–∂–µ—Ç –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    BORDER_TITLE = "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"

    def compose(self):
        yield SettingHeader()
        yield SettingQuality()
        yield Button("–ù–∞–∑–∞–¥ ‚Ü©", id="btn-close-settings")

class SettingHeader(Widget):
    """–í–∏–¥–∂–µ—Ç —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π Header"""
    BORDER_TITLE = "–í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å(Header)"
    def compose(self):
        with HorizontalGroup():
            yield Button("–í–∫–ª—é—á–∏—Ç—å", variant="default", id="btn-header-on")
            yield Button("–í—ã–∫–ª—é—á–∏—Ç—å", variant="error", id="btn-header-off")
            yield DescriptionSettingHeader()

class DescriptionSettingHeader(Widget):
    """–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Header"""
    def render(self):
        return "–í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∞ —Å–≤–µ—Ä—Ö—É –∏ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å: –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å—Ü–µ–Ω—ã, –∏ —á–∞—Å—ã \n(–º–æ–∂–µ—Ç —Å–ª–µ–≥–∫–∞ —É–º–µ–Ω—å—à–∏—Ç—å –æ–±–∑–æ—Ä)"

class SettingQuality(Widget):
    """–í–∏–¥–∂–µ—Ç —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π —Ä–∞–∑–º–µ—Ä–∞ ASCII-–∞—Ä—Ç–æ–≤"""
    BORDER_TITLE = "–†–∞–∑–º–µ—Ä ASCII –∞—Ä—Ç–æ–≤"
    def compose(self):
        with Vertical():
            yield Button("–º–∞–ª–µ–Ω—å–∫–∏–π\n(60x20)", variant="default", id="btn-small")
            yield Button("–°—Ä–µ–¥–Ω–∏–π\n(150x51)", variant="default", id="btn-medium")
            yield Button("–û–ì–†–û–ú–ù–´–ô\n(300x101)", variant="default", id="btn-large")
            yield DescriptionSettingQuality()

class DescriptionSettingQuality(Widget):
    """–û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Quality"""
    def render(self):
        return '–†–∞–∑–º–µ—Ä ASCII –∞—Ä—Ç–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–±–∏—Ä–∞—Ç—å –ø–æ —Ä–∞–∑–º–µ—Ä—É –æ–∫–Ω–∞ –∫–æ–Ω—Å–æ–ª–∏,\n—Å —Å–∏–ª—å–Ω–æ –±–æ–ª—å—à–∏–º —Ä–∞–∑–º–µ—Ä–æ–º - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç –Ω–µ –ø–æ–º–µ—Å—Ç–∏—Ç—å—Å—è.\n\n–ú–æ–∂–µ—Ç–µ —Ç–∞–∫ –∂–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —É–º–µ–Ω—å—à–∏—Ç—å —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ —Å–∞–º–æ–π –∫–æ–Ω—Å–æ–ª–∏ (–û–±—ã—á–Ω–æ —ç—Ç–æ Ctrl+"+" –∏ Ctrl+"-")'


class NovelMenu(Static):
    """–í–∏–¥–∂–µ—Ç-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ç–µ–∫—Å—Ç –±–∞—Ä–∞ –∏ –∫–Ω–æ–ø–æ–∫"""
    def compose(self):
        yield Button("–ù–∞–∑–∞–¥", id="btn-back")
        yield TextBar(id="text-bar")
        yield Button("–í–ø–µ—Ä—ë–¥", id="btn-next")

class TextBar(Widget):
    """–í–∏–¥–∂–µ—Ç —Ç–µ–∫—Å—Ç –±–∞—Ä–∞"""
    BORDER_TITLE = "–†–∞–π–∞–Ω –≥–æ—Å–ª–∏–Ω–≥"   # –ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞

    def render(self):
        return "–¢—ã –ø–æ–π–¥—ë—à—å —Å–æ –º–Ω–æ–π?" # –¢–µ–∫—Å—Ç
    

class TerminalSummer(App):
    """–û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–æ–≤–µ–ª–ª—ã"""
    CSS_PATH = "gameUI.tcss"

    CONFIG_FILE = "settings.json"

    def __init__(self):
        super().__init__()
        self.settings = {
            "header": True,
            "quality": "medium",
        }
        self.audio_player = AudioPlayer()

    current_scene = "bus_stop"             # –¢–µ–∫—É—â–∞—è —Å—Ü–µ–Ω–∞ (–∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è)
    scenes_dir = "TS/ASCII/ASCII-large/bg" # –ü–∞–ø–∫–∞ —Å ASCII-–∞—Ä—Ç–∞–º–∏
    scene_cache = {}                       # –ö—ç—à –¥–ª—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Å—Ü–µ–Ω

    BINDINGS = [
        #("space", "next_scene", "–î–∞–ª–µ–µ"),
        ("escape", "pause_game", "–ü–∞—É–∑–∞"),
        ("b", "prev_scene", "–ù–∞–∑–∞–¥"),
        ("n", "next_scene", "–í–ø–µ—Ä—ë–¥"),
    ]

    def compose(self) -> ComposeResult:
        yield Header(show_clock=True, classes="hidden")
        yield Footer()
        yield MainMenu(id="main-menu")
        yield Static("", id="bg-cg", classes="hidden")
        yield NovelMenu(id="novel-menu", classes="hidden")
        yield PauseMenu(id="pause-menu", classes="hidden")
        yield SettingsMenu(id="settings-menu", classes="hidden")
        yield GalleryMenu(id="gallery-menu", classes="hidden")


    # ============ –§—É–Ω–∫—Ü–∏–∏ - on_ ============
    def on_button_pressed(self, event: Button.Pressed) -> None:
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–æ–∫"""
        button_id = event.button.id

        # –ö–Ω–æ–ø–∫–∏ –≤ NovelMenu:
        if   button_id == "btn-next":             # –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä—ë–¥"
            self.action_next_scene()
        elif button_id == "btn-back":             # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
            self.action_prev_scene()

        # –ö–Ω–æ–ø–∫–∏ –≤ PauseMenu:
        elif button_id == "btn-continue":         # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
            self.action_pause_game()
        elif button_id == "btn-save":             # –ö–Ω–æ–ø–∫–∞ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"
            pass
        elif button_id == "btn-load":             # –ö–Ω–æ–ø–∫–∞ "–ó–∞–≥—Ä—É–∑–∏—Ç—å"
            pass
        elif button_id == "btn-settings-pause":   # –ö–Ω–æ–ø–∫–∞ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
            self.query_one("#settings-menu").add_class("open-from-pause") # –ö–ª–∞—Å—Å-—Ñ–ª–∞–≥ —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–∫—Ä—ã—Ç—ã –∏–∑ PauseMenu
            self.action_open_settings()
        elif button_id == "btn-menu":             # –ö–Ω–æ–ø–∫–∞ "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
            self.action_open_menu()
        elif button_id == "btn-exit-pause":       # –ö–Ω–æ–ø–∫–∞ "–í—ã—Ö–æ–¥"
            self.app.exit()

        # –ö–Ω–æ–ø–∫–∏ –≤ SettingsMenu:
        # Header
        elif button_id == "btn-header-on":        # –ö–Ω–æ–ø–∫–∞ "–í–∫–ª—é—á–∏—Ç—å"
            # –í–∫–ª—é—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
            self.query_one("Header").remove_class("hidden")

            # –ú–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∫–Ω–æ–ø–æ–∫
            self.query_one("#btn-header-on", Button).variant = "success"
            self.query_one("#btn-header-off", Button).variant = "default"

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫
            self.settings["header"] = True
            self.save_settings()
        elif button_id == "btn-header-off":       # –ö–Ω–æ–ø–∫–∞ "–í—ã–∫–ª—é—á–∏—Ç—å"
            # –í–∫–ª—é—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
            self.query_one("Header").add_class("hidden")

            # –ú–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∫–Ω–æ–ø–æ–∫
            self.query_one("#btn-header-on", Button).variant = "default"
            self.query_one("#btn-header-off", Button).variant = "error"

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫
            self.settings["header"] = False
            self.save_settings()

        # Quality
        elif button_id == "btn-small":            # –ö–Ω–æ–ø–∫–∞ "–º–∞–ª–µ–Ω—å–∫–∏–π"
            # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∞—Ä—Ç–æ–≤ –Ω–∞ small
            self.scenes_dir = "TS/ASCII/ASCII-small/bg"
            self.scene_cache = {} # –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ —Å—Ü–µ–Ω
            self.preload_scenes() # –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Å—Ü–µ–Ω
            self.load_scene(self.current_scene)

            # –ú–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∫–Ω–æ–ø–æ–∫
            self.query_one("#btn-small", Button).variant = "error"
            self.query_one("#btn-medium", Button).variant = "default"
            self.query_one("#btn-large", Button).variant = "default"

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫
            self.settings["quality"] = "small"
            self.save_settings()
        elif button_id == "btn-medium":           # –ö–Ω–æ–ø–∫–∞ "–°—Ä–µ–¥–Ω–∏–π"
            # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∞—Ä—Ç–æ–≤ –Ω–∞ medium
            self.scenes_dir = "TS/ASCII/ASCII-medium/bg"
            self.scene_cache = {} # –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ —Å—Ü–µ–Ω
            self.preload_scenes() # –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Å—Ü–µ–Ω
            self.load_scene(self.current_scene)
            
            # –ú–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∫–Ω–æ–ø–æ–∫
            self.query_one("#btn-small", Button).variant = "default"
            self.query_one("#btn-medium", Button).variant = "warning"
            self.query_one("#btn-large", Button).variant = "default"

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫
            self.settings["quality"] = "medium"
            self.save_settings()
        elif button_id == "btn-large":            # –ö–Ω–æ–ø–∫–∞ "–û–ì–†–û–ú–ù–´–ô"
            # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∞—Ä—Ç–æ–≤ –Ω–∞ large
            self.scenes_dir = "TS/ASCII/ASCII-large/bg"
            self.scene_cache = {} # –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ —Å—Ü–µ–Ω
            self.preload_scenes() # –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Å—Ü–µ–Ω
            self.load_scene(self.current_scene)

            # –ú–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∫–Ω–æ–ø–æ–∫
            self.query_one("#btn-small", Button).variant = "default"
            self.query_one("#btn-medium", Button).variant = "default"
            self.query_one("#btn-large", Button).variant = "success"

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫
            self.settings["quality"] = "large"
            self.save_settings()

        elif button_id == "btn-close-settings":   # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
            # –ï—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç–æ –∏–∑ –º–µ–Ω—é –ø–∞—É–∑—ã
            if self.query_one("#settings-menu").has_class("open-from-pause"):
                self.action_open_settings()
                #self.query_one("#settings-menu").remove_class("open-from-pause")
            # –ï—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç–æ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
            elif self.query_one("#settings-menu").has_class("open-from-menu"):
                self.action_open_menu()
                self.query_one("#settings-menu").remove_class("open-from-menu")

        # –ö–Ω–æ–ø–∫–∏ –≤ MainMenu:
        elif button_id == "btn-start-game":       # –ö–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É"
            # –°–∫—Ä—ã—Ç–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
            self.action_open_menu()

            # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ NovelMenu
            self.query_one("#novel-menu").remove_class("hidden")
            self.query_one("#bg-cg").remove_class("hidden")

            # –§–æ–∫—É—Å –Ω–∞ –∫–Ω–æ–ø–∫–µ "–í–ø–µ—Ä—ë–¥" –≤ –∏–≥—Ä–æ–≤–æ–º –º–µ–Ω—é
            self.query_one("#btn-next", Button).focus()
        elif button_id == "btn-save-load":        # –ö–Ω–æ–ø–∫–∞ "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ"
            pass
        elif button_id == "btn-gallery":          # –ö–Ω–æ–ø–∫–∞ "–ì–∞–ª–µ—Ä–µ—è"
            self.action_open_gallery()
        elif button_id == "btn-settings-menu":    # –ö–Ω–æ–ø–∫–∞ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
            self.query_one("#settings-menu").add_class("open-from-menu") # –ö–ª–∞—Å—Å-—Ñ–ª–∞–≥ —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–∫—Ä—ã—Ç—ã –∏–∑ MainMenu
            self.action_open_settings()
        elif button_id == "btn-exit-menu":        # –ö–Ω–æ–ø–∫–∞ "–í—ã—Ö–æ–¥"
            self.app.exit()

        # –ö–Ω–æ–ø–∫–∏ –≤ GalleryMenu:
        # LeftBtns
        elif button_id == "btn-gallery-music":    # –ö–Ω–æ–ø–∫–∞ "–ú—É–∑—ã–∫–∞"
            
            # –ú–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∫–Ω–æ–ø–æ–∫
            self.query_one("#btn-gallery-music", Button).variant = "primary"
            self.query_one("#btn-gallery-cg", Button).variant = "default"
            self.query_one("#btn-gallery-bg", Button).variant = "default"
        elif button_id == "btn-gallery-cg":       # –ö–Ω–æ–ø–∫–∞ "–ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏"
            
            # –ú–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∫–Ω–æ–ø–æ–∫
            self.query_one("#btn-gallery-music", Button).variant = "default"
            self.query_one("#btn-gallery-cg", Button).variant = "primary"
            self.query_one("#btn-gallery-bg", Button).variant = "default"
        elif button_id == "btn-gallery-bg":       # –ö–Ω–æ–ø–∫–∞ "–§–æ–Ω—ã"

            # –ú–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∫–Ω–æ–ø–æ–∫
            self.query_one("#btn-gallery-music", Button).variant = "default"
            self.query_one("#btn-gallery-cg", Button).variant = "default"
            self.query_one("#btn-gallery-bg", Button).variant = "primary"

        # –ü–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏–µ bg –∏ cg
        elif button_id == "btn-back-gallery":     # –ö–Ω–æ–ø–∫–∞ "<<<"
            pass
        elif button_id == "btn-next-gallery":     # –ö–Ω–æ–ø–∫–∞ ">>>"
            pass

        # Quality
        elif button_id == "btn-small-gallery":    # –ö–Ω–æ–ø–∫–∞ "–º–∞–ª–µ–Ω—å–∫–∏–π"

            # –ú–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∫–Ω–æ–ø–æ–∫
            self.query_one("#btn-small-gallery", Button).variant = "error"
            self.query_one("#btn-medium-gallery", Button).variant = "default"
            self.query_one("#btn-large-gallery", Button).variant = "default"
        elif button_id == "btn-medium-gallery":   # –ö–Ω–æ–ø–∫–∞ "–°—Ä–µ–¥–Ω–∏–π"
            
            # –ú–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∫–Ω–æ–ø–æ–∫
            self.query_one("#btn-small-gallery", Button).variant = "default"
            self.query_one("#btn-medium-gallery", Button).variant = "warning"
            self.query_one("#btn-large-gallery", Button).variant = "default"
        elif button_id == "btn-large-gallery":    # –ö–Ω–æ–ø–∫–∞ "–û–ì–†–û–ú–ù–´–ô"
            
            # –ú–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∫–Ω–æ–ø–æ–∫
            self.query_one("#btn-small-gallery", Button).variant = "default"
            self.query_one("#btn-medium-gallery", Button).variant = "default"
            self.query_one("#btn-large-gallery", Button).variant = "success"

        elif button_id == "btn-close-gallery":    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
            self.action_open_gallery()

    def on_mount(self) -> None:
        """–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ"""
        self.load_settings()
        self.apply_settings()


    # ============ –§—É–Ω–∫—Ü–∏–∏ - action_ ============
    def action_prev_scene(self) -> None:
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ü–µ–Ω—É"""
        scenes = self.get_scene_list()
        novel_menu = self.query_one("#novel-menu")
        if novel_menu.has_class("hidden"): # –ï—Å–ª–∏ NovelMenu —Å–∫—Ä—ã—Ç - –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å
            pass
        else:
            if scenes:
                current_index = scenes.index(self.current_scene)
                new_index = max(0, current_index - 1)
                self.load_scene(scenes[new_index])

    def action_next_scene(self) -> None:
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ü–µ–Ω—É"""
        scenes = self.get_scene_list()
        novel_menu = self.query_one("#novel-menu")
        if novel_menu.has_class("hidden"): # –ï—Å–ª–∏ NovelMenu —Å–∫—Ä—ã—Ç - –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å
            pass
        else:
            if scenes:
                current_index = scenes.index(self.current_scene)
                new_index = min(len(scenes) - 1, current_index + 1)
                self.load_scene(scenes[new_index])

    def action_pause_game(self) -> None:
        """–û—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø–∞—É–∑—ã"""
        pause_menu = self.query_one("#pause-menu")
        novel_menu = self.query_one("#novel-menu")
        bg_cg = self.query_one("#bg-cg")
        settings_menu = self.query_one("#settings-menu")
        main_menu = self.query_one("#main-menu")
        gallery_menu = self.query_one("#gallery-menu")

        if main_menu.has_class("hidden") and gallery_menu.has_class("hidden"): # –ï—Å–ª–∏ –ù–ï –æ—Ç–∫—Ä—ã—Ç–æ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            if settings_menu.has_class("open-from-menu"):
                pass

            elif settings_menu.has_class("hidden"): # –ï—Å–ª–∏ –ù–ï –æ—Ç–∫—Ä—ã—Ç–æ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
                # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
                if pause_menu.has_class("hidden"):
                    # C–∫—Ä—ã—Ç–∏–µ –¥–∏–æ–ª–æ–≥–æ–≤–æ–≥–æ –æ–∫–Ω–∞, –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–µ–º–æ—Ç–∫–∏ –∏ –∑–∞–¥–Ω–∏–∫–∞
                    novel_menu.add_class("hidden")
                    bg_cg.add_class("hidden")

                    # –ü–æ–∫–∞–∑ –º–µ–Ω—é –ø–∞—É–∑—ã
                    pause_menu.remove_class("hidden")

                    # –§–æ–∫—É—Å –Ω–∞ –ø–µ—Ä–≤—É—é –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é –ø–∞—É–∑—ã
                    self.query_one("#btn-continue", Button).focus()
                else:
                    # –í—ã–∫–ª—é—á–∞–µ–º –ø–∞—É–∑—É: —Å–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø–∞—É–∑—ã
                    pause_menu.add_class("hidden")

                    # –ü–æ–∫–∞–∑ –¥–∏–æ–ª–æ–≥–æ–≤–æ–≥–æ –æ–∫–Ω–∞, –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–µ–º–æ—Ç–∫–∏ –∏ –∑–∞–¥–Ω–∏–∫–∞
                    novel_menu.remove_class("hidden")
                    bg_cg.remove_class("hidden")

                    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ –∫–Ω–æ–ø–∫—É "–í–ø–µ—Ä—ë–¥" –≤ –∏–≥—Ä–æ–≤–æ–º –º–µ–Ω—é 
                    self.query_one("#btn-next", Button).focus()
            else:
                # –°–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
                settings_menu.add_class("hidden")

                # –ü–æ–∫–∞–∑ –¥–∏–æ–ª–æ–≥–æ–≤–æ–≥–æ –æ–∫–Ω–∞, –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–µ–º–æ—Ç–∫–∏ –∏ –∑–∞–¥–Ω–∏–∫–∞
                novel_menu.remove_class("hidden")
                bg_cg.remove_class("hidden")

                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ –∫–Ω–æ–ø–∫—É "–í–ø–µ—Ä—ë–¥" –≤ –∏–≥—Ä–æ–≤–æ–º –º–µ–Ω—é 
                self.query_one("#btn-next", Button).focus()
        else: pass # –ù–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é

    def action_open_menu(self) -> None:
        """–û—Ç–∫—Ä—ã—Ç–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
        pause_menu = self.query_one("#pause-menu")
        settings_menu = self.query_one("#settings-menu")
        main_menu = self.query_one("#main-menu")

        if main_menu.has_class("hidden"):
            # –°–∫—Ä—ã—Ç–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –º–µ–Ω—é:
            if not pause_menu.has_class("hidden"):      # –ò–∑ –ø–∞—É–∑—ã
                pause_menu.add_class("hidden")
            elif not settings_menu.has_class("hidden"): # –ò–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
                settings_menu.add_class("hidden")

            # –ü–æ–∫–∞–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
            main_menu.remove_class("hidden")

            # –§–æ–∫—É—Å –Ω–∞ –∫–Ω–æ–ø–∫–µ "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É"
            self.query_one("#btn-start-game", Button).focus()
        else:
            # –°–∫—Ä—ã—Ç–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
            main_menu.add_class("hidden")

    def action_open_settings(self) -> None:
        """–û—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        settings_menu = self.query_one("#settings-menu")
        pause_menu = self.query_one("#pause-menu")
        main_menu = self.query_one("#main-menu")
        novel_menu = self.query_one("#novel-menu")
        bg_cg = self.query_one("#bg-cg")

        # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        if settings_menu.has_class("hidden"):
            if settings_menu.has_class("open-from-pause"): # –ï—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç–æ –∏–∑ –ø–∞—É–∑—ã
                # –°–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø–∞—É–∑—ã
                pause_menu.add_class("hidden")
            elif settings_menu.has_class("open-from-menu"): # –ï—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç–æ –∏–∑ –º–µ–Ω—é
                # –°–∫—Ä—ã—Ç–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
                main_menu.add_class("hidden")

            # –ü–æ–∫–∞–∑ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
            settings_menu.remove_class("hidden")

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ –ø–µ—Ä–≤—É—é –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
            self.query_one("#btn-header-on", Button).focus()
        else:
            # C–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
            settings_menu.add_class("hidden")

            if settings_menu.has_class("open-from-pause"): # –ï—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç–æ –∏–∑ –ø–∞—É–∑—ã
                # –£–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞-—Ñ–ª–∞–≥–∞
                settings_menu.remove_class("open-from-pause")

                # –ü–æ–∫–∞–∑ –¥–∏–æ–ª–æ–≥–æ–≤–æ–≥–æ –æ–∫–Ω–∞, –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–µ–º–æ—Ç–∫–∏ –∏ –∑–∞–¥–Ω–∏–∫–∞
                novel_menu.remove_class("hidden")
                bg_cg.remove_class("hidden")

                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ –∫–Ω–æ–ø–∫—É "–í–ø–µ—Ä—ë–¥" –≤ –∏–≥—Ä–æ–≤–æ–º –º–µ–Ω—é 
                self.query_one("#btn-next", Button).focus()
            elif settings_menu.has_class("open-from-menu"): # –ï—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç–æ –∏–∑ –º–µ–Ω—é
                # –£–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞-—Ñ–ª–∞–≥–∞
                settings_menu.remove_class("open-from-menu")

                # –ü–æ–∫–∞–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
                main_menu.remove_class("hidden")

                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é 
                self.query_one("#btn-start-game", Button).focus()

    def action_open_gallery(self) -> None:
        """–û—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –≥–∞–ª–µ—Ä–µ–∏"""
        main_menu = self.query_one("#main-menu")
        gallery_menu = self.query_one("#gallery-menu")

        if gallery_menu.has_class("hidden"):
            # –°–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            self.action_open_menu()
            #main_menu.add_class("hidden")

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –≥–∞–ª–µ—Ä–µ–∏
            gallery_menu.remove_class("hidden")

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ –ø–µ—Ä–≤—É—é –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é –≥–∞–ª–µ—Ä–µ–∏
            self.query_one("#btn-close-gallery", Button).focus()
        else:
            # –°–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –≥–∞–ª–µ—Ä–µ–∏
            gallery_menu.add_class("hidden")

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            self.action_open_menu()
            #main_menu.remove_class("hidden")

    # def action_toggle_dark(self) -> None:
    #     """–°–º–µ–Ω–∞ —Ç—ë–º–Ω–æ–≥–æ/—Å–≤–µ—Ç–ª–æ–≥–æ —Ä–µ–∂–∏–º–∞"""
    #     self.theme = "textual-dark" if self.theme == "textual-light" else "textual-light"


    # ============ –§—É–Ω–∫—Ü–∏–∏ - –ø—Ä–æ—á–∏–µ ============
    def preload_scenes(self):
        """–ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Å—Ü–µ–Ω –≤ –∫—ç—à"""
        try:
            files = [f for f in os.listdir(self.scenes_dir) if f.endswith(".txt")]
            for file in files:
                scene_name = file[:-4]
                with open(os.path.join(self.scenes_dir, file), "r", encoding="utf-8") as f:
                    self.scene_cache[scene_name] = f.read()
        except FileNotFoundError:
            self.scene_cache = {}

    def load_scene(self, scene_name: str) -> None:
        """–ó–∞–≥—Ä—É–∑–∫–∞ ASCII-–∞—Ä—Ç –∏–∑ –∫—ç—à–∞"""
        art_content = self.scene_cache.get(scene_name, f"Scene not found: {scene_name}")
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–∞ —Å –∞—Ä—Ç–æ–º
        bg_cg = self.query_one("#bg-cg", Static)
        bg_cg.update(art_content)
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å—Ü–µ–Ω—ã
        self.current_scene = scene_name
        self.sub_title = f"Scene: {scene_name}"

    def get_scene_list(self) -> list:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ü–µ–Ω"""
        try:
            files = [f[:-4] for f in os.listdir(self.scenes_dir) 
                     if f.endswith(".txt")]
            return sorted(files)
        except FileNotFoundError:
            return []

    def load_settings(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        if os.path.exists(self.CONFIG_FILE):
            with open(self.CONFIG_FILE, "r", encoding="utf-8") as f:
                self.settings = json.load(f)
        else:
            self.save_settings()
    
    def save_settings(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        with open(self.CONFIG_FILE, "w", encoding="utf-8") as f:
            json.dump(self.settings, f, indent=4)

    def apply_settings(self):
        """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ"""
        # Header
        if self.settings["header"]:
            self.query_one("Header").remove_class("hidden")
            self.query_one("#btn-header-on", Button).variant = "success"
            self.query_one("#btn-header-off", Button).variant = "default"
        else:
            self.query_one("Header").add_class("hidden")
            self.query_one("#btn-header-on", Button).variant = "default"
            self.query_one("#btn-header-off", Button).variant = "error"

        # Quality
        quality = self.settings["quality"]
        if quality == "small":
            self.scenes_dir = "TS/ASCII/ASCII-small/bg"
            self.query_one("#btn-small", Button).variant = "error"
        elif quality == "medium":
            self.scenes_dir = "TS/ASCII/ASCII-medium/bg"
            self.query_one("#btn-medium", Button).variant = "warning"
        elif quality == "large":
            self.scenes_dir = "TS/ASCII/ASCII-large/bg"
            self.query_one("#btn-large", Button).variant = "success"

        self.scene_cache = {}
        self.preload_scenes()
        self.load_scene(self.current_scene)



if __name__ == "__main__":
    app = TerminalSummer()
    app.run()